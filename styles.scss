:root{
    --green:  hsl(110,50%,60%);
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    font-size: 17px;
}

html[data-theme='dark'] {
    --hue: 210; /* Blue */
    --accent-hue: 280; /* Orange */
    --text-color-normal: hsl(var(--hue), 10%, 62%);
    --highlight: hsl(var(--accent-hue), 40%, 45%);
}

html[data-theme='light']{
    
    --hue: 210; /* Blue */
    --accent-hue: 25; /* Orange */
    --normal: hsl(var(--hue), 10%, 62%);
    --highlight: hsl(var(--accent-hue), 70%, 45%);
}
//playing with filters, but work on css for having filter appear or not depending on browser

object{
    width: 100%;
}

.color-shift{
    filter: hue-rotate(90deg);
}

.blueshift{
    filter: hue-rotate(45deg);
    width:100%
}

//beginings of function grid

.fibgrid{
    display:grid;
    grid: 1fr 1.62fr / 1fr 1.62fr;
    
    grid-gap: 1rem;
}

.goldrect{
    padding: 1.5rem;
    border-radius: 5px;
    background-color: var(--green);
    display: flex;
    justify-content: center;
    align-items: center;
    color: hsl(45,70%,40%);
}


// look at for animating grid biz


// .grid {
//     display: grid;
//     grid-template-columns: 200px 200px 200px;
//     grid-template-rows: 100px;
//     grid-gap: 20px;
//     transition: all 1s;
//   }
  
//   .grid--full {
//     grid-template-columns: 300px 300px 300px;
//     grid-template-rows: 200px;
//     grid-gap: 10px;
//   }

///theme button biz

#toggler{
    display: flex;
    bottom:1vh;
    left: 50%;
    align-items: center;
    justify-content: center;
    position: absolute;
    border: 2px dashed 12 3 12 cyan;
    border-radius: 5px;
    background: var(--highlight);
    padding: .5rem;
    opacity: .5;
    z-index: 200;

}

////////////////////
// What is below is being built from 
// https://css-tricks.com/custom-styling-form-inputs-with-modern-css-features/

@supports(-webkit-appearance: none) or (-moz-appearance: none) {
    input[type='checkbox'],
    input[type='radio'] {
      -webkit-appearance: none;
      -moz-appearance: none;
    }
  }
  .switch {
    width: 38px;
    border-radius: 11px;
  }
  
  /* The toggle knob */
  .switch::after {
    left: 2px;
    top: 2px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background: var(--ab, var(--border));
    transform: translateX(var(--x, 0));
  }
  
  /* Change color and position when checked */
  .switch:checked {
    --ab: var(--active-inner);
    --x: 17px;
  }

// input[type='checkbox'].switch {
//     width: 38px;
//     border-radius: 11px;
//   }
// input[type='checkbox'].switch:after {
//     left: 2px;
//     top: 2px;
//     border-radius: 50%;
//     width: 15px;
//     height: 15px;
//     background: var(--ab, hsl(231, 39%, 81%));
//     -webkit-transform: translateX(var(--x, 0));
//             transform: translateX(var(--x, 0));
//   }
// input[type='checkbox'].switch:checked {
//     --ab: var(hsl(0,0%,100%));
//     --x: 17px;
//   }
// input[type='checkbox'].switch:disabled:not(:checked):after {
//     opacity: .6;
//   }


////////////////////
// SVG styling

.fuckingblue{
   fill: hsl(330,70%,40%);
}

.fuckingblue:hover{
    fill: hsl(230,30%,40%);
    transition: ease .2s;
}



/////////////////////////
/* Every rule not marked by "required" is optional and used only to decorate the example */
.block {
    margin: 10px 50px;
    display: flex; /* required */
    flex-flow: row nowrap; /* required */
}
.block .background,
.block .foreground {
    box-sizing: border-box; /* required */
    width: 100%; /* required */
    flex: none; /* required */
}
.block .background {
    background: #9ff;
    color: #fff;
    padding: 15px;
    font-size: 30px;
}
.block .foreground {
    padding: 15px;
    border: solid 1px;
    margin-left: -100%; /* required */
}
.block .foreground .outside {
    // position: absolute;
    top: 5px;
    left: 8px;
}
